// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "User Home Page",
                "tags": [
                    "Users"
                ],
                "summary": "HomePage",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/admin/": {
            "get": {
                "description": "admin home",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "adminhome",
                "operationId": "admin-home",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/addproducts": {
            "post": {
                "description": "admin can add product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Admin productadd",
                "operationId": "admin-product add",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of the  product",
                        "name": "productname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "price of the  product",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "discription of the  product",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "color of the  product",
                        "name": "color",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "brandID of the  product",
                        "name": "brandID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stock of the  product",
                        "name": "stock",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cotogeryID of the  product",
                        "name": "catogoryID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sizeID of the  product",
                        "name": "sizeID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload a product image",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "discount of the  product",
                        "name": "discount",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "brandDiscount of the  product",
                        "name": "BrandDiscount",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/applydiscount": {
            "put": {
                "description": "admin can discount product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Admin product discount",
                "operationId": "admin-product-discount",
                "parameters": [
                    {
                        "description": "brand discount",
                        "name": "Brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/deleteproducts/": {
            "delete": {
                "description": "admin can delete product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Admin product delete",
                "operationId": "admin-product delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the  product",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/editproducts": {
            "put": {
                "description": "admin can edit product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Admin product edit",
                "operationId": "admin-product edit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the  product",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "edit product data",
                        "name": "EditProductData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.EditProductsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/generate-coupens/": {
            "post": {
                "description": "admin userdata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "admin-coupen",
                "operationId": "admin-userdata-coupen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coupen code",
                        "name": "coupen_code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "discount of the coupen",
                        "name": "discount",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "quantity code",
                        "name": "quantity",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "validity code",
                        "name": "validity",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/getcategory": {
            "get": {
                "description": "admin can view productlist",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product"
                ],
                "summary": "Admin productlist viewer",
                "operationId": "admin-productlist-view",
                "parameters": [
                    {
                        "type": "string",
                        "description": "brand of the  product",
                        "name": "brandsearch",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "catogery of the  product",
                        "name": "categorysearch",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "size of the  product",
                        "name": "sizesearch",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "admin login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "adminLogin",
                "operationId": "admin-login",
                "parameters": [
                    {
                        "description": "admin details",
                        "name": "admin_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/signup": {
            "post": {
                "description": "Create a new admin with the specified details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "adminSignUp",
                "operationId": "admin-signup",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/userdata/": {
            "get": {
                "description": "admin userdata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin User Handler"
                ],
                "summary": "admin-userdata",
                "operationId": "admin-userdata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "search",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/userdata/block/": {
            "put": {
                "description": "admin user block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin User Handler"
                ],
                "summary": "admin-userblock",
                "operationId": "admin-userblock",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/userdata/unblock/": {
            "put": {
                "description": "admin user unblock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin User Handler"
                ],
                "summary": "admin-userunblock",
                "operationId": "admin-userunblock",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/forgetemail/:email": {
            "get": {
                "description": "user can forgot password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Forget Password",
                "operationId": "user-forgot-password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address of the user",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/forgetpassword": {
            "get": {
                "description": "user can forgot password with otp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Forget Password with otp",
                "operationId": "user-forgot-password-otp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email of the user",
                        "name": "useremail",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "otp of the user",
                        "name": "otp",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new Passsword of the user",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login as a user to access the ecommerce site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Login",
                "operationId": "user-login-email",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Create a new user with the specified details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "UserSignUp",
                "operationId": "user-signup",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/addtocart": {
            "post": {
                "description": "add products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "Add product into user cart",
                "operationId": "add-to-cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email of the user",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "User details",
                        "name": "user_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Productdetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/cancelorder": {
            "get": {
                "description": "cancel order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Orders"
                ],
                "summary": "calcel order",
                "operationId": "cancel orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address of the user",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "order id of the product ",
                        "name": "orderid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/checkout": {
            "get": {
                "description": "checkout",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "Checkout",
                "operationId": "checkout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address of the user",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "wallet of the user",
                        "name": "wallet",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address id of the user",
                        "name": "addressID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "payment method  of the user",
                        "name": "PaymentMethod",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/checkoutAddress": {
            "post": {
                "description": "address for checkout",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "Checkout address",
                "operationId": "checkout address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email of the user",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of the user",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "phone number of the user",
                        "name": "phone_number",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pincode of the user",
                        "name": "pincode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "area of the user",
                        "name": "area",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "house of the user",
                        "name": "house",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "landmark of the user",
                        "name": "landmark",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "city of the user",
                        "name": "city",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/get-productbyid": {
            "get": {
                "description": "user can view product with with id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Product"
                ],
                "summary": "User product viewer",
                "operationId": "user-product-view with id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the  product",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "description": "user profile viewer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Profile"
                ],
                "summary": "user details willget",
                "operationId": "user profile get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email of the user",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/profile/add": {
            "post": {
                "description": "user profile add",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Profile"
                ],
                "summary": "user details add",
                "operationId": "user profile add",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email of the user",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of the user",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "phone number of the user",
                        "name": "phonenumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pincode of the user",
                        "name": "pincode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "area of the user",
                        "name": "area",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "house of the user",
                        "name": "house",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "landmark of the user",
                        "name": "landmark",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "city of the user",
                        "name": "city",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/profile/edit": {
            "put": {
                "description": "user profile editor",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Profile"
                ],
                "summary": "user details edit",
                "operationId": "user profile edit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of the user",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "phone number of the user",
                        "name": "phonenumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pincode of the user",
                        "name": "pincode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "area of the user",
                        "name": "area",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "house of the user",
                        "name": "house",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "landmark of the user",
                        "name": "landmark",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "city of the user",
                        "name": "city",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/returnorder": {
            "get": {
                "description": "return order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Orders"
                ],
                "summary": "return order",
                "operationId": "return orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address of the user",
                        "name": "user",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/show-product-id": {
            "get": {
                "description": "user can view productid with with name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Product"
                ],
                "summary": "User productid viewer",
                "operationId": "user-productid-view",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of the  product",
                        "name": "product-name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/view-products": {
            "get": {
                "description": "user can view product with with id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users Product"
                ],
                "summary": "User product viewer with search",
                "operationId": "user-product-view with search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "searched data of the  product",
                        "name": "search",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort products",
                        "name": "sort",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/viewcart": {
            "get": {
                "description": "add products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart"
                ],
                "summary": "view cart",
                "operationId": "view-cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email of the user",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "product of the user",
                        "name": "productid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "product of the user",
                        "name": "quantity",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/user/vieworder": {
            "get": {
                "description": "view orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Orders"
                ],
                "summary": "viewOrders",
                "operationId": "viewOrders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address of the user",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Admin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.Body": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.Brand": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "integer"
                },
                "discount": {
                    "type": "integer"
                }
            }
        },
        "controllers.EditProductsData": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "productName": {
                    "type": "string"
                }
            }
        },
        "controllers.Productdetails": {
            "type": "object",
            "properties": {
                "productID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "phone"
            ],
            "properties": {
                "block_Status": {
                    "type": "boolean"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "id": {
                    "type": "integer"
                },
                "landmark": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Gin Swagger Example API",
	Description:      "This is a Complete Ecormmerce server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
